<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.NoteNewMapper">
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="model.NoteNew">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="scene" jdbcType="INTEGER" property="scene" />
    <result column="biz_id" jdbcType="BIGINT" property="bizId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_user_token" jdbcType="VARCHAR" property="createUserToken" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_token" jdbcType="VARCHAR" property="updateUserToken" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note_id_old" jdbcType="BIGINT" property="oldNoteId" />
    <result column="link_user_id" jdbcType="BIGINT" property="linkUserId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.NoteNew">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, template_id, template_code, template_name, tenant_id, scene, biz_id, address, 
    longitude, latitude, is_deleted, create_user_token, create_time, update_user_token, 
    update_time, note_id_old, link_user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_note_new
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new (template_id, template_code, template_name, 
      tenant_id, scene, biz_id, 
      address, longitude, latitude, 
      is_deleted, create_user_token, create_time, 
      update_user_token, update_time, note_id_old, 
      link_user_id, content)
    values (#{templateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{templateName,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=BIGINT}, #{scene,jdbcType=INTEGER}, #{bizId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, 
      #{isDeleted,jdbcType=INTEGER}, #{createUserToken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserToken,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{oldNoteId,jdbcType=BIGINT}, 
      #{linkUserId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="model.NoteNew" useGeneratedKeys="true">
    insert into tb_note_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="templateName != null">
        template_name,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createUserToken != null">
        create_user_token,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserToken != null">
        update_user_token,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="oldNoteId != null">
        note_id_old,
      </if>
      <if test="linkUserId != null">
        link_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.NoteNew">
    update tb_note_new
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createUserToken != null">
        create_user_token = #{createUserToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserToken != null">
        update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="oldNoteId != null">
        note_id_old = #{oldNoteId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null">
        link_user_id = #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.NoteNew">
    update tb_note_new
    set template_id = #{templateId,jdbcType=BIGINT},
      template_code = #{templateCode,jdbcType=VARCHAR},
      template_name = #{templateName,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      scene = #{scene,jdbcType=INTEGER},
      biz_id = #{bizId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_user_token = #{createUserToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_token = #{updateUserToken,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note_id_old = #{oldNoteId,jdbcType=BIGINT},
      link_user_id = #{linkUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>